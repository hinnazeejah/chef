{"ast":null,"code":"var _jsxFileName = \"/Users/hinnazeejah/Desktop/chef/frontend/src/components/IngredientForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AutocompleteInput from './AutocompleteInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dietaryPreferences = [{\n  id: 'none',\n  label: 'None'\n}, {\n  id: 'vegetarian',\n  label: 'Vegetarian'\n}, {\n  id: 'vegan',\n  label: 'Vegan'\n}, {\n  id: 'gluten-free',\n  label: 'Gluten-Free'\n}, {\n  id: 'dairy-free',\n  label: 'Dairy-Free'\n}];\nconst IngredientForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [selectedPreferences, setSelectedPreferences] = useState([]);\n  const togglePreference = preferenceId => {\n    if (preferenceId === 'none') {\n      setSelectedPreferences([]);\n      return;\n    }\n    setSelectedPreferences(prev => {\n      if (prev.includes(preferenceId)) {\n        return prev.filter(id => id !== preferenceId);\n      } else {\n        return [...prev.filter(id => id !== 'none'), preferenceId];\n      }\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const ingredientList = ingredients.split(',').map(i => i.trim());\n    onSubmit(ingredientList, selectedPreferences);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-food-cream rounded-2xl p-6 shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/50 backdrop-blur-sm rounded-xl p-4 mb-6 border border-food-orange/10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-food-brown text-sm px-3 py-1 rounded-full bg-food-peach inline-block\",\n        children: \"\\uD83C\\uDF93 College Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-food-brown font-medium mb-2\",\n          children: \"What ingredients do you have?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutocompleteInput, {\n          value: ingredients,\n          onChange: setIngredients,\n          placeholder: \"e.g. ramen, eggs, cheese\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-food-brown font-medium mb-3\",\n          children: \"Dietary Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2\",\n          children: dietaryPreferences.map(preference => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => togglePreference(preference.id),\n            className: `px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 hover:scale-105 ${selectedPreferences.includes(preference.id) ? 'bg-food-orange text-white shadow-md hover:bg-food-orange/90' : 'bg-white text-food-brown border border-food-orange/20 hover:border-food-orange'}`,\n            children: preference.label\n          }, preference.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full py-3 px-4 bg-gradient-to-r from-food-orange to-food-brown text-white rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-200 hover:-translate-y-0.5\",\n        children: \"Find Budget-Friendly Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(IngredientForm, \"4lpdanojQ33OTB7oaL7SLhz77Lc=\");\n_c = IngredientForm;\nexport default IngredientForm;\nvar _c;\n$RefreshReg$(_c, \"IngredientForm\");","map":{"version":3,"names":["React","useState","AutocompleteInput","jsxDEV","_jsxDEV","dietaryPreferences","id","label","IngredientForm","onSubmit","_s","ingredients","setIngredients","selectedPreferences","setSelectedPreferences","togglePreference","preferenceId","prev","includes","filter","handleSubmit","e","preventDefault","ingredientList","split","map","i","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","preference","type","onClick","_c","$RefreshReg$"],"sources":["/Users/hinnazeejah/Desktop/chef/frontend/src/components/IngredientForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport AutocompleteInput from './AutocompleteInput';\n\ninterface DietaryPreference {\n  id: string;\n  label: string;\n}\n\nconst dietaryPreferences: DietaryPreference[] = [\n  { id: 'none', label: 'None' },\n  { id: 'vegetarian', label: 'Vegetarian' },\n  { id: 'vegan', label: 'Vegan' },\n  { id: 'gluten-free', label: 'Gluten-Free' },\n  { id: 'dairy-free', label: 'Dairy-Free' }\n];\n\ninterface IngredientFormProps {\n  onSubmit: (ingredients: string[], preferences: string[]) => void;\n}\n\nconst IngredientForm: React.FC<IngredientFormProps> = ({ onSubmit }) => {\n  const [ingredients, setIngredients] = useState('');\n  const [selectedPreferences, setSelectedPreferences] = useState<string[]>([]);\n\n  const togglePreference = (preferenceId: string) => {\n    if (preferenceId === 'none') {\n      setSelectedPreferences([]);\n      return;\n    }\n    \n    setSelectedPreferences(prev => {\n      if (prev.includes(preferenceId)) {\n        return prev.filter(id => id !== preferenceId);\n      } else {\n        return [...prev.filter(id => id !== 'none'), preferenceId];\n      }\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const ingredientList = ingredients.split(',').map(i => i.trim());\n    onSubmit(ingredientList, selectedPreferences);\n  };\n\n  return (\n    <div className=\"bg-food-cream rounded-2xl p-6 shadow-lg\">\n      <div className=\"bg-white/50 backdrop-blur-sm rounded-xl p-4 mb-6 border border-food-orange/10\">\n        <div className=\"text-food-brown text-sm px-3 py-1 rounded-full bg-food-peach inline-block\">\n          ðŸŽ“ College Mode\n        </div>\n      </div>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        <div>\n          <label className=\"block text-food-brown font-medium mb-2\">\n            What ingredients do you have?\n          </label>\n          <AutocompleteInput\n            value={ingredients}\n            onChange={setIngredients}\n            placeholder=\"e.g. ramen, eggs, cheese\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-food-brown font-medium mb-3\">\n            Dietary Preferences\n          </label>\n          <div className=\"flex flex-wrap gap-2\">\n            {dietaryPreferences.map(preference => (\n              <button\n                key={preference.id}\n                type=\"button\"\n                onClick={() => togglePreference(preference.id)}\n                className={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 hover:scale-105 ${\n                  selectedPreferences.includes(preference.id)\n                    ? 'bg-food-orange text-white shadow-md hover:bg-food-orange/90'\n                    : 'bg-white text-food-brown border border-food-orange/20 hover:border-food-orange'\n                }`}\n              >\n                {preference.label}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"w-full py-3 px-4 bg-gradient-to-r from-food-orange to-food-brown text-white rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-200 hover:-translate-y-0.5\"\n        >\n          Find Budget-Friendly Recipes\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default IngredientForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
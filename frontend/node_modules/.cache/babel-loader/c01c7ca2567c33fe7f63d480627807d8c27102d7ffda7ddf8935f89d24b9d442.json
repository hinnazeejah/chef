{"ast":null,"code":"var _jsxFileName = \"/Users/hinnazeejah/Desktop/chef/frontend/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RecipeCard from '../components/RecipeCard';\nimport StoreList from '../components/StoreList';\nimport PriceTable from '../components/PriceTable';\nimport IngredientForm from '../components/IngredientForm';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [stores, setStores] = useState([]);\n  const [prices, setPrices] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showResults, setShowResults] = useState(false);\n  const [userLocation, setUserLocation] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    getUserLocation();\n  }, []);\n  const getUserLocation = () => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, error => {\n        console.error(\"Error getting location:\", error);\n        setError(\"Unable to get your location. Using default location.\");\n      });\n    } else {\n      setError(\"Geolocation is not supported by your browser\");\n    }\n  };\n  const handleSubmit = async (ingredients, preferences) => {\n    setIsLoading(true);\n    setError('');\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock recipe data\n      const mockRecipes = [{\n        id: '1',\n        title: 'Chicken Rice Bowl',\n        image: 'https://via.placeholder.com/300',\n        prepTime: '30 mins',\n        description: 'A delicious chicken and rice bowl',\n        dietaryTags: preferences,\n        estimatedCost: 15.99,\n        missingIngredients: [{\n          name: 'soy sauce',\n          price: 3.99,\n          stores: [{\n            name: 'Local Grocery',\n            address: '123 Main St',\n            distance: 0.5,\n            price: 3.99\n          }]\n        }],\n        totalCost: 15.99\n      }];\n      navigate('/recipe-results', {\n        state: {\n          recipes: mockRecipes,\n          userIngredients: ingredients,\n          preferences: preferences\n        }\n      });\n    } catch (err) {\n      setError('Failed to fetch recipes. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8 max-w-6xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(IngredientForm, {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 text-red-700 p-4 rounded-md\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : showResults && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n          recipe: recipe,\n          onViewRecipe: id => console.log('View recipe:', id)\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(StoreList, {\n          stores: stores\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PriceTable, {\n          prices: prices,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"S7fpD2E1ekRGt6p6EkxWBqcAMdY=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","RecipeCard","StoreList","PriceTable","IngredientForm","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","recipes","setRecipes","stores","setStores","prices","setPrices","isLoading","setIsLoading","error","setError","showResults","setShowResults","userLocation","setUserLocation","lat","lng","navigate","getUserLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","handleSubmit","ingredients","preferences","Promise","resolve","setTimeout","mockRecipes","id","title","image","prepTime","description","dietaryTags","estimatedCost","missingIngredients","name","price","address","distance","totalCost","state","userIngredients","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","recipe","onViewRecipe","log","_c","$RefreshReg$"],"sources":["/Users/hinnazeejah/Desktop/chef/frontend/src/pages/Home.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Recipe, Store, Price } from '../types';\nimport RecipeCard from '../components/RecipeCard';\nimport StoreList from '../components/StoreList';\nimport PriceTable from '../components/PriceTable';\nimport IngredientForm from '../components/IngredientForm';\nimport { useNavigate } from 'react-router-dom';\n\nconst Home: React.FC = () => {\n  const [recipes, setRecipes] = useState<Recipe[]>([]);\n  const [stores, setStores] = useState<Store[]>([]);\n  const [prices, setPrices] = useState<Price[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showResults, setShowResults] = useState(false);\n  const [userLocation, setUserLocation] = useState({ lat: 0, lng: 0 });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getUserLocation();\n  }, []);\n\n  const getUserLocation = () => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setUserLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          });\n        },\n        (error) => {\n          console.error(\"Error getting location:\", error);\n          setError(\"Unable to get your location. Using default location.\");\n        }\n      );\n    } else {\n      setError(\"Geolocation is not supported by your browser\");\n    }\n  };\n\n  const handleSubmit = async (ingredients: string[], preferences: string[]) => {\n    setIsLoading(true);\n    setError('');\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Mock recipe data\n      const mockRecipes = [{\n        id: '1',\n        title: 'Chicken Rice Bowl',\n        image: 'https://via.placeholder.com/300',\n        prepTime: '30 mins',\n        description: 'A delicious chicken and rice bowl',\n        dietaryTags: preferences,\n        estimatedCost: 15.99,\n        missingIngredients: [\n          {\n            name: 'soy sauce',\n            price: 3.99,\n            stores: [\n              {\n                name: 'Local Grocery',\n                address: '123 Main St',\n                distance: 0.5,\n                price: 3.99\n              }\n            ]\n          }\n        ],\n        totalCost: 15.99\n      }];\n\n      navigate('/recipe-results', {\n        state: {\n          recipes: mockRecipes,\n          userIngredients: ingredients,\n          preferences: preferences\n        }\n      });\n    } catch (err) {\n      setError('Failed to fetch recipes. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-8 max-w-6xl mx-auto\">\n      <div className=\"max-w-2xl mx-auto\">\n        <IngredientForm onSubmit={handleSubmit} />\n      </div>\n      {error && (\n        <div className=\"bg-red-100 text-red-700 p-4 rounded-md\">\n          {error}\n        </div>\n      )}\n      {isLoading ? (\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto\"></div>\n        </div>\n      ) : (\n        showResults && (\n          <>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {recipes.map(recipe => (\n                <RecipeCard\n                  key={recipe.id}\n                  recipe={recipe}\n                  onViewRecipe={(id) => console.log('View recipe:', id)}\n                />\n              ))}\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              <StoreList stores={stores} />\n              <PriceTable prices={prices} isLoading={isLoading} />\n            </div>\n          </>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
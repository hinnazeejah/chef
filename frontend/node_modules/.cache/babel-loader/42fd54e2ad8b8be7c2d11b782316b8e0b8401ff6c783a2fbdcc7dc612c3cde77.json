{"ast":null,"code":"var _jsxFileName = \"/Users/hinnazeejah/Desktop/chef/frontend/src/components/StoreMap.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLoadScript, GoogleMap, Marker } from '@react-google-maps/api';\n\n// Define libraries type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['places'];\nconst StoreMap = ({\n  stores,\n  userLocation\n}) => {\n  _s();\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '',\n    libraries\n  });\n  const mapContainerStyle = React.useMemo(() => ({\n    width: '100%',\n    height: '400px'\n  }), []);\n  const options = React.useMemo(() => ({\n    zoomControl: true,\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false\n  }), []);\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: userLocation,\n      zoom: 13,\n      options: options,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: userLocation,\n        icon: {\n          url: '/user-location.png',\n          scaledSize: new google.maps.Size(40, 40)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), stores.map(store => /*#__PURE__*/_jsxDEV(Marker, {\n        position: store.coordinates,\n        title: store.name\n      }, store.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreMap, \"4Xb6OOj61/FoBtqf211KZyDXp8s=\", false, function () {\n  return [useLoadScript];\n});\n_c = StoreMap;\nexport default StoreMap;\nvar _c;\n$RefreshReg$(_c, \"StoreMap\");","map":{"version":3,"names":["React","useLoadScript","GoogleMap","Marker","jsxDEV","_jsxDEV","libraries","StoreMap","stores","userLocation","_s","isLoaded","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","mapContainerStyle","useMemo","width","height","options","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","children","fileName","_jsxFileName","lineNumber","columnNumber","style","center","zoom","position","icon","url","scaledSize","google","maps","Size","map","store","coordinates","title","name","id","_c","$RefreshReg$"],"sources":["/Users/hinnazeejah/Desktop/chef/frontend/src/components/StoreMap.tsx"],"sourcesContent":["import React from 'react';\nimport { Store } from '../types';\nimport { useLoadScript, GoogleMap, Marker, Libraries } from '@react-google-maps/api';\n\n// Define libraries type\nconst libraries: Libraries = ['places'];\n\ninterface StoreMapProps {\n  stores: Store[];\n  userLocation: {\n    lat: number;\n    lng: number;\n  };\n}\n\nconst StoreMap: React.FC<StoreMapProps> = ({ stores, userLocation }) => {\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '',\n    libraries\n  });\n\n  const mapContainerStyle = React.useMemo(() => ({\n    width: '100%',\n    height: '400px'\n  }), []);\n\n  const options = React.useMemo(() => ({\n    zoomControl: true,\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n  }), []);\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div style={{ height: '400px', width: '100%' }}>\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        center={userLocation}\n        zoom={13}\n        options={options}\n      >\n        <Marker\n          position={userLocation}\n          icon={{\n            url: '/user-location.png',\n            scaledSize: new google.maps.Size(40, 40)\n          }}\n        />\n        \n        {stores.map((store) => (\n          <Marker\n            key={store.id}\n            position={store.coordinates}\n            title={store.name}\n          />\n        ))}\n      </GoogleMap>\n    </div>\n  );\n};\n\nexport default StoreMap; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,SAAS,EAAEC,MAAM,QAAmB,wBAAwB;;AAEpF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAoB,GAAG,CAAC,QAAQ,CAAC;AAUvC,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM;IAAEC;EAAS,CAAC,GAAGV,aAAa,CAAC;IACjCW,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B,IAAI,EAAE;IACjET;EACF,CAAC,CAAC;EAEF,MAAMU,iBAAiB,GAAGhB,KAAK,CAACiB,OAAO,CAAC,OAAO;IAC7CC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC,CAAC,EAAE,EAAE,CAAC;EAEP,MAAMC,OAAO,GAAGpB,KAAK,CAACiB,OAAO,CAAC,OAAO;IACnCI,WAAW,EAAE,IAAI;IACjBC,iBAAiB,EAAE,KAAK;IACxBC,cAAc,EAAE,KAAK;IACrBC,iBAAiB,EAAE;EACrB,CAAC,CAAC,EAAE,EAAE,CAAC;EAEP,IAAI,CAACb,QAAQ,EAAE;IACb,oBAAON,OAAA;MAAAoB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACExB,OAAA;IAAKyB,KAAK,EAAE;MAAEX,MAAM,EAAE,OAAO;MAAED,KAAK,EAAE;IAAO,CAAE;IAAAO,QAAA,eAC7CpB,OAAA,CAACH,SAAS;MACRc,iBAAiB,EAAEA,iBAAkB;MACrCe,MAAM,EAAEtB,YAAa;MACrBuB,IAAI,EAAE,EAAG;MACTZ,OAAO,EAAEA,OAAQ;MAAAK,QAAA,gBAEjBpB,OAAA,CAACF,MAAM;QACL8B,QAAQ,EAAExB,YAAa;QACvByB,IAAI,EAAE;UACJC,GAAG,EAAE,oBAAoB;UACzBC,UAAU,EAAE,IAAIC,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,EAAE,EAAE,EAAE;QACzC;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEDrB,MAAM,CAACgC,GAAG,CAAEC,KAAK,iBAChBpC,OAAA,CAACF,MAAM;QAEL8B,QAAQ,EAAEQ,KAAK,CAACC,WAAY;QAC5BC,KAAK,EAAEF,KAAK,CAACG;MAAK,GAFbH,KAAK,CAACI,EAAE;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACnB,EAAA,CAhDIH,QAAiC;EAAA,QAChBN,aAAa;AAAA;AAAA6C,EAAA,GAD9BvC,QAAiC;AAkDvC,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/hinnazeejah/Desktop/chef/src/components/IngredientForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dietaryPreferences = [{\n  id: 'vegetarian',\n  label: 'Vegetarian'\n}, {\n  id: 'vegan',\n  label: 'Vegan'\n}, {\n  id: 'gluten-free',\n  label: 'Gluten-Free'\n}, {\n  id: 'dairy-free',\n  label: 'Dairy-Free'\n}];\nconst IngredientForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [selectedPreferences, setSelectedPreferences] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const ingredientList = ingredients.split(',').map(i => i.trim());\n    onSubmit(ingredientList, selectedPreferences);\n  };\n  const togglePreference = id => {\n    setSelectedPreferences(prev => prev.includes(id) ? prev.filter(p => p !== id) : [...prev, id]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Ingredients (comma-separated)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: ingredients,\n        onChange: e => setIngredients(e.target.value),\n        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\",\n        placeholder: \"e.g., chicken, rice, tomatoes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Dietary Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 space-x-4\",\n        children: dietaryPreferences.map(pref => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedPreferences.includes(pref.id),\n            onChange: () => togglePreference(pref.id),\n            className: \"rounded border-gray-300 text-indigo-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: pref.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, pref.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full bg-indigo-600 py-2 px-4 text-white rounded-md hover:bg-indigo-700\",\n      children: \"Find Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(IngredientForm, \"4lpdanojQ33OTB7oaL7SLhz77Lc=\");\n_c = IngredientForm;\nexport default IngredientForm;\nvar _c;\n$RefreshReg$(_c, \"IngredientForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","dietaryPreferences","id","label","IngredientForm","onSubmit","_s","ingredients","setIngredients","selectedPreferences","setSelectedPreferences","handleSubmit","e","preventDefault","ingredientList","split","map","i","trim","togglePreference","prev","includes","filter","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","pref","checked","_c","$RefreshReg$"],"sources":["/Users/hinnazeejah/Desktop/chef/src/components/IngredientForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface DietaryPreference {\n  id: string;\n  label: string;\n}\n\nconst dietaryPreferences: DietaryPreference[] = [\n  { id: 'vegetarian', label: 'Vegetarian' },\n  { id: 'vegan', label: 'Vegan' },\n  { id: 'gluten-free', label: 'Gluten-Free' },\n  { id: 'dairy-free', label: 'Dairy-Free' },\n];\n\ninterface IngredientFormProps {\n  onSubmit: (ingredients: string[], preferences: string[]) => void;\n}\n\nconst IngredientForm: React.FC<IngredientFormProps> = ({ onSubmit }) => {\n  const [ingredients, setIngredients] = useState<string>('');\n  const [selectedPreferences, setSelectedPreferences] = useState<string[]>([]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const ingredientList = ingredients.split(',').map(i => i.trim());\n    onSubmit(ingredientList, selectedPreferences);\n  };\n\n  const togglePreference = (id: string) => {\n    setSelectedPreferences(prev =>\n      prev.includes(id)\n        ? prev.filter(p => p !== id)\n        : [...prev, id]\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">\n          Ingredients (comma-separated)\n        </label>\n        <input\n          type=\"text\"\n          value={ingredients}\n          onChange={(e) => setIngredients(e.target.value)}\n          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n          placeholder=\"e.g., chicken, rice, tomatoes\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">\n          Dietary Preferences\n        </label>\n        <div className=\"mt-2 space-x-4\">\n          {dietaryPreferences.map(pref => (\n            <label key={pref.id} className=\"inline-flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={selectedPreferences.includes(pref.id)}\n                onChange={() => togglePreference(pref.id)}\n                className=\"rounded border-gray-300 text-indigo-600\"\n              />\n              <span className=\"ml-2\">{pref.label}</span>\n            </label>\n          ))}\n        </div>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full bg-indigo-600 py-2 px-4 text-white rounded-md hover:bg-indigo-700\"\n      >\n        Find Recipes\n      </button>\n    </form>\n  );\n};\n\nexport default IngredientForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}